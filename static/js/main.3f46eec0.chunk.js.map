{"version":3,"sources":["JokeCard.js","App.js","index.js"],"names":["useStyles","makeStyles","card","marginBottom","CardContent","paddingBottom","CardActions","padding","Category","withStyles","root","marginTop","Chip","JokeCard","joke","likeJoke","unlikeJoke","index","classes","Card","className","id","categories","length","map","cat","label","variant","Typography","Button","color","onClick","Spinner","style","textAlign","CircularProgress","App","useState","jokes","setJokes","jokesToShow","setJokesToShow","setCategories","filterCategories","setFilterCategories","likedJokes","setLikedJokes","currentTab","setCurrentTab","firstName","setFirstName","lastName","setlastName","loading","setLoading","useEffect","fetchAndSetJokes","fetch","then","res","json","value","catch","err","console","log","slice","find","j","likedJoke","newLikedJokes","filter","observeElement","bottomJoke","observer","IntersectionObserver","entries","isIntersecting","setTimeout","unobserve","threshold","observe","bottomJokeE1","document","getElementById","toggleCategory","event","category","target","name","includes","filterCategoriesCopy","categoryIndex","indexOf","splice","CssBaseline","Container","align","AppBar","position","Tabs","onChange","centered","Tab","arial-controls","Badge","badgeContent","role","hidden","onSubmit","noValidate","TextField","e","FormControlLabel","control","Checkbox","checked","jokeCategories","i","categoryMatch","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3f46eec0.chunk.js","sourcesContent":["import React from 'react'\nimport {Button, Card, Chip, CardContent, CardActions, Typography,} from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    card: {\n        marginBottom: 20,\n    },\n    CardContent: {\n        paddingBottom: '5',\n    },\n    CardActions: {\n        padding: '15px',\n    },\n })\n\nconst Category = withStyles({\n    root: {\n        marginTop: 10,\n        marginBottom: 10\n    },\n})(Chip);\n\n\nfunction JokeCard({joke, likeJoke, unlikeJoke, index} ) {\n\n    const classes = useStyles();\n\n    return (\n    \n             < Card className = { classes.card } id={`joke-${index}`} > \n                <CardContent className = { classes.CardContent } >\n                    {joke.categories.length > 0 ? (joke.categories.map(cat => ( \n                        < Category label = { cat } key = { cat } variant = \"outlined\" /> ))\n                            ) : \n                        < Category label = \"Regular\" variant = \"outlined\"/>}\n                        < Typography > { joke.joke } </Typography> \n                </CardContent >\n                <CardActions className = { classes.CardActions } >\n                    <Button variant = \"contained\" color = \"primary\"onClick = {() => likeJoke(joke.id)}>\n                        like \n                    </Button> \n                    <Button variant = \"contained\" color = \"default\" onClick = {() => unlikeJoke(joke.id)} >\n                        unlike \n                    </Button> \n                </CardActions> \n            </Card>\n    )\n};\n\nexport default JokeCard;","import React, { useEffect, useState } from 'react';\nimport {\n    AppBar,\n    Badge,\n    Container,\n    CircularProgress,\n    Tab,\n    Tabs,\n    Typography,\n    TextField,\n    FormControlLabel,\n    Checkbox\n} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles} from '@material-ui/core/styles';\nimport  JokeCard  from './JokeCard';\n\nconst useStyles = makeStyles({\n\n});\n\nfunction Spinner(){\n    return(\n        <div style={{textAlign: 'center', padding: '2rem' }}>\n            <CircularProgress/>\n        </div>\n    )}\n    \n\nconst likeJoke = (id) => {\n    console.log(\"uliking joke, \" + id);\n};\n\n\nconst unlikeJoke = (id) => {\n    console.log(\"unliking joke, \" + id);\n};\n\nfunction App() {\n\n    const [jokes, setJokes] = useState([]);\n    const [jokesToShow, setJokesToShow] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [filterCategories, setFilterCategories] = useState([]);\n\n    const [likedJokes, setLikedJokes] = useState([]);\n    const [currentTab, setCurrentTab] = useState(0);\n\n    const [firstName, setFirstName] = useState([]);\n    const [lastName, setlastName] = useState([]);\n\n    const[loading, setLoading] = useState([false]);\n\n    const classes = useStyles();\n\n\n    useEffect(() => {\n        setLoading(true)\n        fetchAndSetJokes ()\n        fetch('http://api.icndb.com/categories')\n        .then(res => res.json())\n        .then(res => {\n            setCategories(res.value);\n            setFilterCategories(res.value)\n        })\n        \n        .catch(err => console.log(err))\n    }, []);\n\n    const fetchAndSetJokes = () => {\n        fetch('https://api.icndb.com/jokes')\n        .then(res => res.json())\n        .then(res => {\n            console.log(res);\n            setJokes(res.value)\n            setJokesToShow(res.value.slice(0, 10))\n        })\n        .catch((err) => console.log(err));\n    }\n\n    const likeJoke = (id) => {\n        if (likedJokes.find((j) => j.id === id)) return;\n        const likedJoke = jokes.find((j) => j.id === id);\n        setLikedJokes([likedJoke, ...likedJokes])\n    };\n\n    const unlikeJoke = (id) => {\n        const newLikedJokes =  likedJokes.filter((j) => j.id !== id);\n        setLikedJokes(newLikedJokes);\n    };\n\n    const changeTab = (event, value) => {\n        setCurrentTab(value)\n    };\n\n\n    const addMoreJokes = () => {\n        setLoading(true)\n        setTimeout(() => {\n        setJokesToShow(jokes.slice(0, jokesToShow.length + 10));\n        setLoading(false) \n        }, 400);\n    };\n\n   const observeElement = (bottomJoke) => {\n       if (!bottomJoke) return;\n    const observer = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting === true) {\n        addMoreJokes();\n        observer.unobserve(bottomJoke);\n        }\n    },{\n        threshold: 1,\n    } );\n    observer.observe(bottomJoke);\n   };\n\n   useEffect(() => {\n    const bottomJokeE1 = document.getElementById(\n        `joke-${jokesToShow.length -1}`    \n    );\n    observeElement(bottomJokeE1);\n}, [jokesToShow]);\n  \nconst toggleCategory = (event, value) => {\n    const category = event.target.name\n\n    if(filterCategories.includes(category)){\n        {/*if category found then remove else*/}\n        const filterCategoriesCopy = [...filterCategories];\n        const categoryIndex = filterCategoriesCopy.indexOf(category);\n        filterCategoriesCopy.splice(categoryIndex, 1);\n        setFilterCategories(filterCategoriesCopy);\n        {/**Add it */}\n    } else{\n        setFilterCategories([...filterCategories, category])\n    }\n};\n\nconst categoryMatch = (jokeCategories) =>{\n    for(let i = 0; i < jokeCategories.length; i++){\n        if(filterCategories.includes(jokeCategories[i])) return true\n    }\n    return false\n};\n\nconst changeName = () => {\n    if(firstName === '' || lastName ==='') return\n    \n} \n    return ( \n        <div className = \"App\" >\n        <CssBaseline />\n        <Container>\n            <Typography variant = \"h3\" align = \"center\" > Chuck Norris jokes </Typography>\n\n            <AppBar style={{marginBottom: 20}} position=\"sticky\" >\n            <Tabs value={currentTab} onChange={changeTab} centered>\n                <Tab label= \"Home\" id=\"home-tab\" arial-controls=\"home-panel\"/>\n                <Tab label= {\n                    <Badge\n                        color=\"secondary\"\n                        badgeContent={\n                            likedJokes.length > 0 ? likedJokes.length : null\n                        }>\n                            Likes\n                        </Badge>\n                } id=\"like-tab\" arial-controls=\"likes-panel\"/>    \n            </Tabs> \n            </AppBar>\n\n            <div role=\"tabpanel\" hidden={currentTab !== 0}>\n                <form onSubmit={changeName} noValidate>\n                    <TextField \n                        id=\"FirstName\"\n                        label=\"First Name\"\n                        value={firstName}\n                        onChange={ e => setFirstName(e.target.value)}\n                    />\n\n                    <TextField \n                        id=\"lastName\"\n                        label=\"Last Name\"\n                        value={lastName}\n                        onChange={ e => setlastName(e.target.value)}\n                    />\n                </form>\n                {/*Category filters */}\n                {categories.map((category) => (\n                    <FormControlLabel\n                        key={category}\n                            control ={ \n                                <Checkbox name={category} \n                                color=\"primary\" \n                                checked={filterCategories.includes}\n                                onChange={toggleCategory}/> }\n                                label={category}\n                    />\n                ))}\n                {/*Joke Cards*/}\n                { jokesToShow.map((joke, index)=> {\n                    if (joke.categories.length === 0 || \n                        categoryMatch(joke.categories)) {\n                        \n                return(\n                    <JokeCard key={joke.id}\n                     joke={joke}\n                     likeJoke={likeJoke}\n                     unlikeJoke={unlikeJoke}\n                     index={index}/>\n                );\n                }})}\n                {loading && Spinner}\n            </div>\n                 \n\n            <div role=\"tabpanel\" hidden={currentTab !== 1}>\n            { likedJokes.map((joke) => ( \n                <JokeCard key={joke.id} joke={joke} likeJoke={likeJoke} unlikeJoke={unlikeJoke}/> \n            ))}       \n            </div>\n             \n        </Container> \n        </div>\n);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( \n    <React.StrictMode >\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}